xo game logic 

n=10
player 1 --> 1
player 2 --> 2

0 0 0
0 0 0
0 0 0 

k=0;
while(k<n*n)
{
	if(k%2==0)
	{
		//player 1
		if(validate user input)
		{
			insert a value to 2d array;
			if(a[row][col]==0)
			{
				//a[row][col]=1;
			}
			else
			{
				//print(already occupied)
				k--;
			}
			function()
			{
				rowcheck(k,arr,n);
				colcheck(k,arr,n);
				leftcheck(k,arr,n);
				rightcheck(k,arr,n);
			}
		}
	}
	else
	{
		//player 2
		if(validate user input)
		{
			insert a value to 2d array;
			if(a[row][col]==0)
			{
				//a[row][col]=2;
			}
			else
			{
				//print(already occupied)
				k--;
				
			}
			function()
			{
				rowcheck(k,arr,n);
				colcheck(k,arr,n);
				leftcheck(k,arr,n);
				rightcheck(k,arr,n);
			}

		}
	}
	k++; //-->1
}


pos: 1

0,0 2--> 0,1 

/
%

row = 0/n 
col = 0%n

0 0

pos: 2
2--> 0,1 

row = 1/n -->0
col = 1%n -->1

pos: 9
9--> 2,2

row = 8/n -->2
col = 8%n -->2

100

100--> 9,9

row = 99/10 -->9
col = 99%10 -->9


2,2
10/3=3


//left diagonal
1 0 0
0 1 0
0 0 1 
player 1

i==j

flag=1;
for(i=1,j=1;;i<n;i++,j++)
{
	if(a[0][0]==a[i][j])
	{
		flag++;
	}

}
if(flag==n)
{
	k%2==0 ? player 1 win : player 2win;
}



2 0 0
0 2 0
0 0 2
player 2


//right diagonal

0 0 1
0 1 0
1 0 0 

flag=1;
for(i=1,j=n-2;i<n;i++,j--)
{
	if(a[0][n-1]==a[i][j])
	{
		flag++;
	}

}
if(flag==n)
{
	k%2==0 ? player 1 win : player 2win;
}


//row 

1 1 1
0 0 0
0 0 0


for(i=0;i<n;i++)
{
	flag=1;
	for(j=1;j<n;j++)
	{
		if(a[i][0]==a[i][j])
		{
			flag++;
		}
	}
	if(flag==n)
	{
		break;
	}
}

if(flag==n)
{
	k%2==0 ? player 1 win : player 2win;
}


//column
1 0 0
1 0 0
1 0 0

for(i=0;i<n;i++)
{
	flag=1;
	for(j=1;j<n;j++)
	{
		if(a[0][i]==a[j][i])
		{
			flag++;
		}
	}
	if(flag==n)
	{
		break;
	}
}
if(flag==n)
{
	k%2==0 ? player 1 win : player 2win;
}
